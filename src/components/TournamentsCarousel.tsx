import React, { useState } from 'react';
import { Carousel, Container, Row, Col, Badge } from 'react-bootstrap';
import { TournamentSummary } from './TournamentStats';

interface TournamentsCarouselProps {
  tournaments: TournamentSummary[];
}

const TournamentsCarousel: React.FC<TournamentsCarouselProps> = ({ tournaments }) => {
  const [activeIndex, setActiveIndex] = useState(0);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä
  const getTournamentUrl = (tournamentId: string): string => {
    const tournamentUrls: { [key: string]: string } = {
      'one': 'https://challonge.com/TEKKENRIVALSONE',
      'two': 'https://challonge.com/TEKKENRIVALSTWO',
      'three': 'https://challonge.com/TEKKENRIVALSTHREE',
      'four': 'https://challonge.com/TEKKENRIVALSFOUR'
    };
    return tournamentUrls[tournamentId] || '#';
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–∞
  const getTournamentBackground = (tournamentNumber: number): string => {
    return `/TEKKENRIVALS/R${tournamentNumber}.png`;
  };

  if (!tournaments.length) {
    return (
      <div className="tournaments-carousel">
        <h3>–¢—É—Ä–Ω–∏—Ä—ã TEKKEN RIVALS</h3>
        <p>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç—É—Ä–Ω–∏—Ä–æ–≤</p>
      </div>
    );
  }

  return (
    <div className="tournaments-carousel">
      <h3>–¢—É—Ä–Ω–∏—Ä—ã TEKKEN RIVALS</h3>
      
      <Carousel
        activeIndex={activeIndex}
        onSelect={setActiveIndex}
        interval={null} // –û—Ç–∫–ª—é—á–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
        indicators={false}
        controls={true}
        className="tournament-carousel"
      >
        {tournaments.map((tournament) => (
          <Carousel.Item key={tournament.id}>
            <div 
              className="tournament-slide"
              style={{
                backgroundImage: `url(${getTournamentBackground(tournament.tournamentNumber)})`
              }}
              onClick={() => window.open(getTournamentUrl(tournament.id), '_blank')}
            >
              <div className="tournament-overlay">
                <Container className="h-100">
                  <Row className="h-100 align-items-center">
                    {/* –õ–µ–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç—É—Ä–Ω–∏—Ä–µ */}
                    <Col lg={6} className="tournament-content">
                      <div className="tournament-header">
                        <h2 className="tournament-title">
                          <span className="tournament-brand">TEKKEN RIVALS</span>
                          <span className="tournament-name">{tournament.name}</span>
                        </h2>
                        <div className="tournament-meta">
                          <Badge className="participants-badge">
                            {tournament.participantsCount} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
                          </Badge>
                          <div className="twitch-link">
                            <svg width="20" height="20" viewBox="0 0 2400 2800" className="me-2">
                              <path fill="#29ffa7" d="M500,0L0,500v1800h600v500l500-500h400l900-900V0H500z M2200,1300l-400,400h-400l-350,350v-350H600V200h1600V1300z"/>
                              <rect x="1700" y="550" fill="#29ffa7" width="200" height="600"/>
                              <rect x="1150" y="550" fill="#29ffa7" width="200" height="600"/>
                            </svg>
                            <a 
                              href="https://twitch.tv/AVICII75" 
                              target="_blank" 
                              rel="noopener noreferrer"
                              onClick={(e) => e.stopPropagation()}
                              className="twitch-link-text"
                            >
                              twitch.tv/AVICII75
                            </a>
                          </div>
                        </div>
                      </div>
                      
                      <div className="tournament-content-bottom">
                        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Å—é–¥–∞ */}
                      </div>
                    </Col>

                    {/* –ü—Ä–∞–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞ - –ø—É—Å—Ç–∞—è –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                    <Col lg={6} className="tournament-right-side">
                      {/* –ü—É—Å—Ç–∞—è –æ–±–ª–∞—Å—Ç—å –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */}
                    </Col>
                  </Row>

                  {/* –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å —Å –ø—å–µ–¥–µ—Å—Ç–∞–ª–æ–º */}
                  <Row className="justify-content-center position-absolute bottom-0 start-50 translate-middle-x w-100" style={{bottom: '20px'}}>
                    <Col xs={12} md={8} lg={6} className="tournament-podium">
                      <div className="podium-container">
                        <div className="podium-grid">
                          {tournament.results
                            .sort((a, b) => a.final_rank - b.final_rank)
                            .slice(0, 3)
                            .map((result, index) => (
                              <div 
                                key={index} 
                                className={`podium-cell place-${result.final_rank}`}
                                onClick={() => window.open(`https://challonge.com/users/${result.challonge_username}`, '_blank')}
                              >
                                <div className="podium-rank">
                                  {result.final_rank === 1 && 'ü•á'}
                                  {result.final_rank === 2 && 'ü•à'}
                                  {result.final_rank === 3 && 'ü•â'}
                                </div>
                                <div className="podium-player">
                                  <div className="player-name">{result.participant_name}</div>
                                  <div className="player-points">{result.points_earned} –æ—á–∫–æ–≤</div>
                                </div>
                                {index < 2 && <div className="podium-divider"></div>}
                              </div>
                            ))}
                        </div>
                      </div>
                    </Col>
                  </Row>
                </Container>
              </div>
            </div>
          </Carousel.Item>
        ))}
      </Carousel>

      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–ª–∞–π–¥–æ–≤ */}
      <div className="carousel-indicators-custom mt-4">
        {tournaments.map((_, index) => (
          <button
            key={index}
            className={`indicator ${index === activeIndex ? 'active' : ''}`}
            onClick={() => setActiveIndex(index)}
            aria-label={`–ü–µ—Ä–µ–π—Ç–∏ –∫ —Ç—É—Ä–Ω–∏—Ä—É ${index + 1}`}
          />
        ))}
      </div>
    </div>
  );
};

export default TournamentsCarousel;
