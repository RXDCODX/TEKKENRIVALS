import { useState, useEffect } from 'react'
import 'bootstrap/dist/css/bootstrap.min.css'
import './styles/main.scss'
import TournamentAnalyzer from './components/TournamentAnalyzer'
import TournamentStats from './components/TournamentStats'
import AppHeader from './components/AppHeader'
import AppLoading from './components/AppLoading'
import CreatorsSection from './components/CreatorsSection'
import SplashScreen from './components/SplashScreen'
import { AudioProvider } from './contexts/AudioContext'
import { useAudio } from './hooks/useAudio'
import { TournamentParticipantsData } from './types'
import { dataLoader } from './utils/dataLoader'
import AudioToggleButton from './components/AudioToggleButton'

// –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—É–¥–∏–æ
const AppContent: React.FC = () => {
  const { setBackgroundMusic, setSplashActive } = useAudio();
  const [tournamentData, setTournamentData] = useState<{[key: string]: TournamentParticipantsData}>({})
  const [isLoading, setIsLoading] = useState(true)
  const [isRefreshing, setIsRefreshing] = useState(false)
  const [showSplash, setShowSplash] = useState(true)
  const [showContent, setShowContent] = useState(false)

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  const loadTournamentData = async (forceRefresh: boolean = false) => {
    try {
      const tournaments = ['one', 'two', 'three', 'four']
      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤...')
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
      const data = await dataLoader.loadTournamentData(tournaments, forceRefresh)
      
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:', Object.keys(data))
      setTournamentData(data)
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤:', error)
    } finally {
      setIsLoading(false)
      setIsRefreshing(false)
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
  const handleDataRefresh = async () => {
    setIsRefreshing(true)
    await loadTournamentData(true)
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –∑–∞—Å—Ç–∞–≤–∫–∏
  const handleSplashComplete = () => {
    setShowSplash(false)
    setSplashActive(false) // –£–≤–µ–¥–æ–º–ª—è–µ–º AudioContext –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ splash screen
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ body –∏ app-header –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∞
    setTimeout(() => {
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π
      document.body.classList.add('animations-enabled')
    }, 100)
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ 3.5 —Å–µ–∫—É–Ω–¥—ã (–≤–æ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏)
  useEffect(() => {
    const timer = setTimeout(() => {
      setShowContent(true)
    }, 3500)

    return () => clearTimeout(timer)
  }, [])

  useEffect(() => {
    loadTournamentData(true) // –ü—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º
  }, [])

  if (isLoading)  {
    return <AppLoading />
  }

  return (
    <>
      {/* –ó–∞—Å—Ç–∞–≤–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–≤–µ—Ä—Ö –≤—Å–µ–≥–æ */}
      {showSplash && <SplashScreen onAnimationComplete={handleSplashComplete} />}
      
      {/* –ö–Ω–æ–ø–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–≤—É–∫–æ–º */}
      <AudioToggleButton />
      
      <div className="app">
        {/* –§–æ–Ω–æ–≤–æ–µ –≤–∏–¥–µ–æ */}
        <video 
          className={`background-video ${showSplash ? 'paused' : 'playing'}`}
          autoPlay
          muted
          loop
          playsInline
          preload="auto"
        >
          <source src="./background.mp4" type="video/mp4" />
          –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ —ç–ª–µ–º–µ–Ω—Ç.
        </video>
        
        {/* –§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞ */}
        <audio 
          ref={(audio) => {
            if (audio) {
              setBackgroundMusic(audio);
            }
          }}
          src="./sr.wav"
          loop
          preload="auto"
        />
        
        <div className={`app-content ${showSplash ? 'hidden' : 'visible'}`}>
          <AppHeader 
            onDataRefresh={handleDataRefresh}
            isLoading={isRefreshing}
            isSplashActive={showSplash}
          />
          
          <main className={`app-main ${showContent ? 'revealed' : 'hidden'}`}>
            <div className="content-section">
              <TournamentStats tournamentData={tournamentData} />
            </div>
            
            <div className="section-divider"></div>
            
            <div className="content-section">
              <h2 className="section-title">–†–µ–π—Ç–∏–Ω–≥ –∏–≥—Ä–æ–∫–æ–≤</h2>
              <TournamentAnalyzer tournamentData={tournamentData} />
            </div>
          </main>
          
          <CreatorsSection />
        </div>
      </div>
    </>
  )
}

function App() {
  return (
    <AudioProvider>
      <AppContent />
    </AudioProvider>
  )
}

export default App
